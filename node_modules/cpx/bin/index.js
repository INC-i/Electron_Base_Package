#!/usr/bin/env node


/**
 * @author Toru Nagashima
 * @copyright 2016 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */
/* eslint no-console:0, no-process-exit:0 */

"use strict";

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _set = require("babel-runtime/core-js/set");

var _set2 = _interopRequireDefault(_set);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var subarg = require("subarg");

//------------------------------------------------------------------------------
// Parse arguments.
var OPTIONS = {
    c: "command",
    C: "clean",
    h: "help",
    L: "dereference",
    t: "transform",
    v: "verbose",
    V: "version",
    w: "watch"
};
var args = subarg(process.argv.slice(2), {
    boolean: ["clean", "dereference", "help", "verbose", "version", "watch"],
    alias: OPTIONS
});
var source = args._[0];
var outDir = args._[1];

//------------------------------------------------------------------------------
// Validate Options.
var knowns = new _set2.default(["_"]);
for (var key in OPTIONS) {
    knowns.add(key);
    knowns.add(OPTIONS[key]);
}
var unknowns = (0, _keys2.default)(args).filter(function (key) {
    return !knowns.has(key);
});
if (unknowns.length > 0) {
    console.error("Unknown option(s): " + unknowns.join(", "));
    process.exit(1);
}

//------------------------------------------------------------------------------
// Main.
if (args.help || source == null || outDir == null || args._.length > 2) {
    require("./help")();
} else if (args.version) {
    require("./version")();
} else {
    require("./main")(source, outDir, args);
}