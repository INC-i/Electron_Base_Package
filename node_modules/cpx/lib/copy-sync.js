/**
 * @author Toru Nagashima
 * @copyright 2016 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */

"use strict";

var Buffer = require("buffer").Buffer;

var _require = require("fs");

var openSync = _require.openSync;
var closeSync = _require.closeSync;
var readSync = _require.readSync;
var writeSync = _require.writeSync;

var MAX_BUFFER = 2048;

/**
 * @param {string} src - A path of the source file.
 * @param {string} dst - A path of the destination file.
 * @returns {void}
 * @private
 */
module.exports = function copySync(src, dst) {
    var buffer = new Buffer(MAX_BUFFER);
    var bytesRead = MAX_BUFFER;
    var pos = 0;

    var input = openSync(src, "r");
    try {
        var output = openSync(dst, "w");
        try {
            while (MAX_BUFFER === bytesRead) {
                bytesRead = readSync(input, buffer, 0, MAX_BUFFER, pos);
                writeSync(output, buffer, 0, bytesRead);
                pos += bytesRead;
            }
        } finally {
            closeSync(output);
        }
    } finally {
        closeSync(input);
    }
};